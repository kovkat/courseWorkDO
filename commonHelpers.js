(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))e(n);new MutationObserver(n=>{for(const t of n)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&e(s)}).observe(document,{childList:!0,subtree:!0});function o(n){const t={};return n.integrity&&(t.integrity=n.integrity),n.referrerPolicy&&(t.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?t.credentials="include":n.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function e(n){if(n.ep)return;n.ep=!0;const t=o(n);fetch(n.href,t)}})();function u(i){const l=[];return Object.keys(i[0]).forEach(e=>{const n=i.map(t=>t[e]);l[e]=Math.min(...n)}),l}function d(i){const l=u(i);return i.map(o=>o.map((e,n)=>l[n]===1/0?e:e-l[n]))}function y(i){return i.map(l=>Math.min(...l))}function g(i){const l=y(i);return i.map((o,e)=>l[e]===1/0?o:o.map(n=>n-l[e]))}function I(i,l){const o=t=>t.filter(s=>s!==1/0).reduce((s,f)=>s+f,0),e=o(i),n=o(l);return e+n}function p(i){const l=[];for(let o=0;o<i.length;o+=1){l[o]=[];for(let e=0;e<i[o].length;e+=1)i[o][e]===0?l[o][e]=h(i,o,e):l[o][e]=null}return l}function h(i,l,o){const e=i[l].filter((f,c)=>c!==o&&f!==1/0),n=i.map(f=>f[o]).filter(f=>f!==1/0);let t=e[0];for(let f=1;f<e.length;f++)e[f]<t&&(t=e[f]);let s=n[0];for(let f=1;f<n.length;f++)n[f]<s&&(s=n[f]);return t+s}let a=[];function w(i){let l=-1/0,o=null,e=null;for(let n=0;n<i.length;n+=1)for(let t=0;t<i[n].length;t+=1)i[n][t]!==null&&i[n][t]>l?(l=i[n][t],o=n,e=t):i[n][t]!==null&&i[n][t]===l&&(n<o||n===o&&t<e)&&(o=n,e=t);return a.push([o+1,e+1]),{value:l,row:o+1,column:e+1}}function b(i,l,o){return i.map((e,n)=>e.map((t,s)=>n===l-1||s===o-1?1/0:t))}function $(i,l){for(const[o,e]of l){i[e-1][o-1]!==1/0&&(i[e-1][o-1]=1/0,console.log(`Симетричний перехід (${e}, ${o}) заборонено`));for(const[n,t]of l)if(o!==n&&o!==t&&e!==t&&e!==n){console.log("Знайдено цикл (координати не мають однакових значень)",[o,e],[n,t]);const s=new Set([[o,n],[o,t],[e,n],[e,t],[n,o],[n,e],[t,o],[t,e]]);for(const[f,c]of s)!l.some(m=>m[0]===f&&m[1]===c)&&i[f-1][c-1]!==1/0&&(i[f-1][c-1]=1/0,console.log(`Заборонено перехід (${f}, ${c})`))}}return i}console.log("МАТРИЦЯ ПЕРЕНАЛАШТУВАНЬ");let r=[[1/0,15,1/0,20,1/0,5,1/0,10],[5,1/0,15,1/0,5,1/0,10,1/0],[1/0,20,1/0,15,1/0,5,1/0,5],[10,1/0,20,1/0,5,1/0,10,1/0],[1/0,15,1/0,15,1/0,5,1/0,5],[10,1/0,15,1/0,10,1/0,10,1/0],[1/0,20,1/0,20,1/0,10,1/0,5],[5,1/0,15,1/0,5,1/0,5,1/0]];console.table(r);for(let i=0;i<=1;i+=1){console.log(`ІТЕРАЦІЯ №${i+1}`);let l=0;console.log("ЕТАП-1. ЗВЕДЕННЯ МАТРИЦІ");let o=u(r);console.log("Мінімальні по стовпцях:",o.join(" ")),r=d(r),console.log("Матриця після віднімання мінімумів по стовпцях:"),console.table(r);let e=y(r);console.log("Мінімальні по рядкам:",e.join(" ")),r=g(r),console.log("Матриця після віднімання мінімумів по рядках:"),console.table(r);let n=I(o,e);l+=n,console.log("Нова мінімальна границя",l),console.log("ЕТАП-2. ОБЧИСЛЕННЯ ШТРАФІВ");let t=p(r);console.log("Матриця штрафів для нулів:"),console.table(t);let s=w(t);console.log("Максимальний штраф:",s.value),console.log(`Ребро: (${s.row}, ${s.column})`);let f=a;r=b(r,s.row,s.column),console.log(`Матриця після заміни ребра (${s.row}, ${s.column}) на Infinity: `),console.table(r),r=$(r,f),console.table(r),o=u(r),e=y(r),n=I(o,e),console.log(n)}
//# sourceMappingURL=commonHelpers.js.map
