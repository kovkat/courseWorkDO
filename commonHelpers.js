(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function o(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(e){if(e.ep)return;e.ep=!0;const i=o(e);fetch(e.href,i)}})();function g(t){return t.map(l=>Math.min(...l))}function v(t,l){const o=g(t);return l+=o.reduce((e,i)=>e+i,0),{matrix:t.map((e,i)=>e.map((s,c)=>s-o[i])),newMinBorderRows:l}}function a(t){const l=[];return Object.keys(t[0]).forEach(n=>{const e=t.map(i=>i[n]);l[n]=Math.min(...e)}),l}function d(t,l){const o=a(t);return l+=Object.values(o).reduce((e,i)=>e+i,0),{matrix:t.map((e,i)=>e.map((s,c)=>s-o[c])),newMinBorderCols:l}}function C(t,l){let o=0;for(let n=0;n<t.length;n+=1)o+=t[n];for(let n=0;n<l.length;n+=1)o+=l[n];return o}function O(t){const l=[];for(let o=0;o<t.length;o+=1){l[o]=[];for(let n=0;n<t[o].length;n+=1)t[o][n]===0?l[o][n]=R(t,o,n):l[o][n]=null}return l}function R(t,l,o){const n=t[l].filter((c,u)=>u!==o&&c!==1/0),e=t.map(c=>c[o]).filter(c=>c!==1/0),i=n.length>0?Math.min(...n):0,s=e.length>0?Math.min(...e):0;return i+s}let h=[];function j(t){let l=-1/0,o=null,n=null;for(let e=0;e<t.length;e+=1)for(let i=0;i<t[e].length;i+=1)t[e][i]!==null&&t[e][i]>l?(l=t[e][i],o=e,n=i):t[e][i]!==null&&t[e][i]===l&&(e<o||e===o&&i<n)&&(o=e,n=i);return h.push([o+1,n+1]),{value:l,row:o+1,column:n+1}}function M(t,l,o){return t.map((n,e)=>n.map((i,s)=>e===l-1||s===o-1?1/0:i))}function P(t,l){for(const[o,n]of l){t[n-1][o-1]!==1/0&&(t[n-1][o-1]=1/0,console.log(`Симетричний перехід (${n}, ${o}) заборонено`));for(const[e,i]of l)if(o!==e&&o!==i&&n!==i&&n!==e){console.log("Знайдено цикл (координати не мають однакових значень)",[o,n],[e,i]);const s=new Set([[o,e],[o,i],[n,e],[n,i],[e,o],[e,n],[i,o],[i,n]]);for(const[c,u]of s)!l.some(I=>I[0]===c&&I[1]===u)&&t[c-1][u-1]!==1/0&&(t[c-1][u-1]=1/0,console.log(`Заборонено перехід (${c}, ${u})`))}}return t}console.log("МАТРИЦЯ ПЕРЕНАЛАШТУВАНЬ");let r=[[1/0,15,1/0,20,1/0,5,1/0,10],[5,1/0,15,1/0,5,1/0,10,1/0],[1/0,20,1/0,15,1/0,5,1/0,5],[10,1/0,20,1/0,5,1/0,10,1/0],[1/0,15,1/0,15,1/0,5,1/0,5],[10,1/0,15,1/0,10,1/0,10,1/0],[1/0,20,1/0,20,1/0,10,1/0,5],[5,1/0,15,1/0,5,1/0,5,1/0]];console.table(r);console.log("ЕТАП-1. ЗВЕДЕННЯ МАТРИЦІ");let y=a(r);console.log("Мінімальні по стовпцях:",y.join(" "));let{matrix:m,newMinBorderCols:p}=d(r,0);r=m;console.log("Матриця після віднімання мінімумів по стовпцях:");console.table(m);console.log("Нова мінімальна границя:",p);let w=g(r);console.log("Мінімальні по рядкам:",w.join(" "));let{matrix:E,newMinBorderRows:$}=v(r,p);r=E;console.log("Матриця після віднімання мінімумів по рядках:");console.table(r);console.log("Нова мінімальна границя:",$);let V=C(y,w);console.log(V);console.log("ЕТАП-2. ОБЧИСЛЕННЯ ШТРАФІВ");let b=O(r);console.log("Матриця штрафів для нулів:");console.table(b);let f=j(b);console.log("Максимальний штраф:",f.value);console.log(`Ребро: (${f.row}, ${f.column})`);let A=h;r=M(r,f.row,f.column);console.log(`Матриця після заміни ребра (${f.row}, ${f.column}) на Infinity: `);console.table(r);r=P(r,A);console.table(r);function L(t,l,o){console.log(`Удаление из матрицы ${l}:${o}`);for(let n=0;n<t.length;n++)n===l-1?t[n]=Array(t[n].length).fill(null):t[n][o-1]=null;return console.log(`Результат удаления из матрицы ${l}:${o}`),t}r=L(r,f.row,f.column);console.table(r);y=a(r);console.log("Мінімальні по стовпцях:",y.join(" "));d(r,$);r=m;
//# sourceMappingURL=commonHelpers.js.map
