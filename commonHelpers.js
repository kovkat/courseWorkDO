(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const e of n)if(e.type==="childList")for(const s of e.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function t(n){const e={};return n.integrity&&(e.integrity=n.integrity),n.referrerPolicy&&(e.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?e.credentials="include":n.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function o(n){if(n.ep)return;n.ep=!0;const e=t(n);fetch(n.href,e)}})();function a(i){return i.map(l=>Math.min(...l))}function h(i,l){const t=a(i);return l+=t.reduce((n,e)=>n+e,0),{matrix:i.map((n,e)=>n.map((s,c)=>s-t[e])),newMinBorderRows:l}}function m(i){const l=[];return Object.keys(i[0]).forEach(o=>{const n=i.map(e=>e[o]);l[o]=Math.min(...n)}),l}function w(i,l){const t=m(i);return l+=Object.values(t).reduce((n,e)=>n+e,0),{matrix:i.map((n,e)=>n.map((s,c)=>s-t[c])),newMinBorderCols:l}}function b(i){const l=[];for(let t=0;t<i.length;t+=1){l[t]=[];for(let o=0;o<i[t].length;o+=1)i[t][o]===0?l[t][o]=v(i,t,o):l[t][o]=null}return l}function v(i,l,t){const o=i[l].filter((c,u)=>u!==t&&c!==1/0),n=i.map(c=>c[t]).filter(c=>c!==1/0),e=o.length>0?Math.min(...o):0,s=n.length>0?Math.min(...n):0;return e+s}let I=[];function C(i){let l=-1/0,t=null,o=null;for(let n=0;n<i.length;n+=1)for(let e=0;e<i[n].length;e+=1)i[n][e]!==null&&i[n][e]>l?(l=i[n][e],t=n,o=e):i[n][e]!==null&&i[n][e]===l&&(n<t||n===t&&e<o)&&(t=n,o=e);return I.push([t+1,o+1]),{value:l,row:t+1,column:o+1}}function M(i,l,t){return i.map((o,n)=>o.map((e,s)=>n===l-1||s===t-1?1/0:e))}function O(i,l){for(const[t,o]of l){i[o-1][t-1]!==1/0&&(i[o-1][t-1]=1/0,console.log(`Симетричний перехід (${o}, ${t}) заборонено`));for(const[n,e]of l)if(t!==n&&t!==e&&o!==e&&o!==n){console.log("Знайдено цикл (координати не мають однакових значень)",[t,o],[n,e]);const s=new Set([[t,n],[t,e],[o,n],[o,e],[n,t],[n,o],[e,t],[e,o]]);for(const[c,u]of s)!l.some(y=>y[0]===c&&y[1]===u)&&i[c-1][u-1]!==1/0&&(i[c-1][u-1]=1/0,console.log(`Заборонено перехід (${c}, ${u})`))}}return i}console.log("МАТРИЦЯ ПЕРЕНАЛАШТУВАНЬ");let r=[[1/0,15,1/0,20,1/0,5,1/0,10],[5,1/0,15,1/0,5,1/0,10,1/0],[1/0,20,1/0,15,1/0,5,1/0,5],[10,1/0,20,1/0,5,1/0,10,1/0],[1/0,15,1/0,15,1/0,5,1/0,5],[10,1/0,15,1/0,10,1/0,10,1/0],[1/0,20,1/0,20,1/0,10,1/0,5],[5,1/0,15,1/0,5,1/0,5,1/0]];console.table(r);console.log("ЕТАП-1. ЗВЕДЕННЯ МАТРИЦІ");let P=m(r);console.log("Мінімальні по стовпцях:",P.join(" "));let{matrix:d,newMinBorderCols:g}=w(r,0);r=d;console.log("Матриця після віднімання мінімумів по стовпцях:");console.table(d);console.log("Нова мінімальна границя:",g);let R=a(r);console.log("Мінімальні по рядкам:",R.join(" "));let{matrix:$,newMinBorderRows:j}=h(r,g);r=$;console.log("Матриця після віднімання мінімумів по рядках:");console.table(r);console.log("Нова мінімальна границя:",j);console.log("ЕТАП-2. ОБЧИСЛЕННЯ ШТРАФІВ");let p=b(r);console.log("Матриця штрафів для нулів:");console.table(p);let f=C(p);console.log("Максимальний штраф:",f.value);console.log(`Ребро: (${f.row}, ${f.column})`);let V=I;r=M(r,f.row,f.column);console.log(`Матриця після заміни ребра (${f.row}, ${f.column}) на Infinity: `);console.table(r);r=O(r,V);console.table(r);
//# sourceMappingURL=commonHelpers.js.map
