{"version":3,"file":"commonHelpers.js","sources":["../src/js/generator/taskGenerator.js","../src/js/algorithms/branchAndBound.js"],"sourcesContent":["// Об`єкт функцій\nconst taskGenerator = {\n  /**\n   * Генерує матрицю передування для заданої кількості студентів.\n   * @param {number} numOfStudents - Кількість студентів.\n   * @param {number} tau - Значення математичного сподівання.\n   * @param {number} deltaTau - Значення напівінтервалу ∆τ.\n   * @returns {number[][]} - Матриця передування.\n   * @throws {Error} - Якщо неправильні вхідні дані.\n   */\n  generateMatrix: function (numOfStudents, tau, deltaTau) {\n    // Перевірка вхідних даних\n    if (\n      !Number.isInteger(numOfStudents) ||\n      numOfStudents <= 0 ||\n      tau < 0 ||\n      deltaTau < 0\n    ) {\n      throw new Error(\n        'Неправильні вхідні дані! Очікується ціле додатнє число numOfStudents, tau >= 0 та deltaTau >= 0.'\n      );\n    }\n\n    // Верхня та нижня границі для генерації випадкових значень\n    const minVal = tau - deltaTau;\n    const maxVal = tau + deltaTau;\n\n    // Створення та заповнення матриці значеннями\n    const matrix = Array.from({ length: numOfStudents }, () =>\n      Array.from({ length: numOfStudents }, () => Infinity)\n    );\n\n    for (let i = 0; i < numOfStudents; i += 1) {\n      for (let j = 0; j < numOfStudents; j += 1) {\n        // Перевірка, чи парність індексів різна\n        if (i % 2 !== j % 2) {\n          matrix[i][j] =\n            Math.floor(Math.random() * (maxVal - minVal + 1)) + minVal;\n        }\n      }\n    }\n\n    return matrix;\n  },\n\n  /**\n   * Тестовий метод\n   */\n  // testMethod: function () {\n  //   console.log('hello');\n  // },\n};\n\n// Експорт функцій\nexport const generateMatrix = taskGenerator.generateMatrix;\n// export const testMethod = taskGenerator.testMethod;\n\n//===== Test case 2 ====//\n// export function generateMatrix(numOfStudents, tau, deltaTau) {\n//   let matrix = []; // матриця передування\n\n//   for (let i = 0; i < numOfStudents; i += 1) {\n//     matrix[i] = [];\n\n//     for (let j = 0; j < numOfStudents; j += 1) {\n//       // якщо обидва індекси парні або непарні\n//       if (i % 2 === j % 2) {\n//         matrix[i][j] = Infinity;\n//         continue; // наступна ітерація\n//       }\n\n//       let minVal = tau - deltaTau; // нижнє значення\n//       let maxVal = tau + deltaTau; // верхнє значення\n\n//       matrix[i][j] = Math.floor(Math.random() * (maxVal - minVal + 1)) + minVal;\n//     }\n//   }\n\n//   return matrix;\n// }\n\n// let numOfStudents = 5; // Кількість учнів\n// let tau = 5; // Значення математичного сподівання\n// let deltaTau = 2; // Значення напівінтервалу ∆τ\n// let matrix = generateMatrix(numOfStudents, tau, deltaTau);\n// console.table(matrix);\n\n/// Матриця з прикладу курсової\n// let precedenceMatrix = [\n//   [NaN, 15, NaN, 20, NaN, 5, NaN, 10],\n//   [5, NaN, 15, NaN, 5, NaN, 10, NaN],\n//   [NaN, 20, NaN, 15, NaN, 5, NaN, 5],\n//   [10, NaN, 20, NaN, 5, NaN, 10, NaN],\n//   [NaN, 15, NaN, 15, NaN, 5, NaN, 5],\n//   [10, NaN, 15, NaN, 10, NaN, 10, NaN],\n//   [NaN, 20, NaN, 20, NaN, 10, NaN, 5],\n//   [5, NaN, 15, NaN, 5, NaN, 5, NaN],\n// ];\n","// Pohorila Dariia\nimport { generateMatrix } from '/js/generator/taskGenerator';\n\nlet matrix = generateMatrix(8, 15, 5);\nconsole.table(matrix);\n"],"names":["taskGenerator","numOfStudents","tau","deltaTau","minVal","maxVal","matrix","i","j","generateMatrix"],"mappings":"ssBACA,MAAMA,EAAgB,CASpB,eAAgB,SAAUC,EAAeC,EAAKC,EAAU,CAEtD,GACE,CAAC,OAAO,UAAUF,CAAa,GAC/BA,GAAiB,GACjBC,EAAM,GACNC,EAAW,EAEX,MAAM,IAAI,MACR,kGACR,EAII,MAAMC,EAASF,EAAMC,EACfE,EAASH,EAAMC,EAGfG,EAAS,MAAM,KAAK,CAAE,OAAQL,CAAa,EAAI,IACnD,MAAM,KAAK,CAAE,OAAQA,CAAe,EAAE,IAAM,GAAQ,CAC1D,EAEI,QAASM,EAAI,EAAGA,EAAIN,EAAeM,GAAK,EACtC,QAASC,EAAI,EAAGA,EAAIP,EAAeO,GAAK,EAElCD,EAAI,IAAMC,EAAI,IAChBF,EAAOC,CAAC,EAAEC,CAAC,EACT,KAAK,MAAM,KAAK,OAAQ,GAAIH,EAASD,EAAS,EAAE,EAAIA,GAK5D,OAAOE,CACR,CAQH,EAGaG,EAAiBT,EAAc,eCnD5C,IAAIM,EAASG,EAAe,EAAG,GAAI,CAAC,EACpC,QAAQ,MAAMH,CAAM"}